{"version":3,"sources":["components/TimeAgo/TimeAgo.jsx","components/AddPost/AddPost.module.scss","components/Posts/Posts.module.scss","components/AddPost/AddPost.jsx","components/Posts/Posts.jsx"],"names":["TimeAgo","timestamp","timeAgo","date","parseISO","formatDistanceToNow","addSuffix","locale","ruLocale","module","exports","renderTextField","label","input","custom","TextField","autoComplete","AddPost","handleSubmit","stylesInput","InputStyle","stylesButton","ButtonStyle","className","styles","onSubmit","Field","name","root","component","type","variant","multiline","Button","outlineBlue","reduxForm","form","Posts","dispatch","useDispatch","posts","useSelector","state","useEffect","getPostsThunk","length","Preloading","map","post","id","title","text","to","substr"],"mappings":"wKAgBeA,IAZC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACbC,EAAU,GACd,GAAID,EAAW,CACb,IAAME,EAAOC,YAASH,GACtBC,EAAUG,YAAoBF,EAAM,CAAEG,WAAW,EAAMC,OAAQC,MAGjE,OACE,+BAAON,M,oBCXXO,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,WAAa,0BAA0B,UAAY,yBAAyB,UAAY,yBAAyB,cAAgB,+B,kKCMxKC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAUC,EAApB,wCAAkC,cAACC,EAAA,EAAD,yBAAWH,MAAOA,EAAOI,aAAa,OAAUH,GAAWC,KAGjHG,EAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aACPC,EAAcC,cACdC,EAAeC,cAErB,OACI,uBAAMC,UAAWC,OAAaC,SAAWP,EAAzC,UACI,qBAAKK,UAAU,aAAf,yGACA,cAACG,EAAA,EAAD,CAAOC,KAAK,QAAQJ,UAAWJ,EAAYS,KAAMC,UAAWlB,EAAiBmB,KAAK,OAAOlB,MAAM,yDAAYmB,QAAQ,aACnH,cAACL,EAAA,EAAD,CAAOC,KAAK,OAAOJ,UAAWJ,EAAYS,KAAMC,UAAWlB,EAAiBqB,WAAS,EAACpB,MAAM,iCAAQmB,QAAQ,aAC5G,cAACE,EAAA,EAAD,CAAQH,KAAK,SAASP,UAAS,UAAKF,EAAaO,KAAlB,YAA0BP,EAAaa,YAAvC,YAAsDV,qBAArF,wEAOGP,EAFfA,EAAUkB,YAAU,CAACC,KAAM,YAAjBD,CAA8BlB,G,iBCwBzBoB,UApCD,WACV,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMA,SAQ/C,OALAG,qBAAU,WACNL,EAASM,OACV,IAIC,gCACI,cAAC,EAAD,IACA,qBAAKrB,UAAU,aAAf,+DAEIiB,GAA0B,IAAjBA,EAAMK,OACT,cAACC,EAAA,EAAD,IACAN,EAAMO,KAAI,SAAAC,GAAS,IACbC,EAAgCD,EAAhCC,GAAIC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,KAAMxB,EAAeqB,EAAfrB,KAAMxB,EAAS6C,EAAT7C,KAE/B,OACI,eAAC,IAAD,CAAMiD,GAAE,gBAAWH,GAAM1B,UAAWC,OAApC,UACI,qBAAKD,UAAWC,aAAhB,SAAoC0B,IACpC,qBAAK3B,UAAWC,YAAhB,SAAmC2B,EAAKN,OAAS,IAAd,UAAuBM,EAAKE,OAAO,EAAG,KAAtC,OAAkDF,IACrF,sBAAK5B,UAAWC,YAAhB,UACI,iCAAOG,EAAP,QACA,cAAC3B,EAAA,EAAD,CAASC,UAAWE,SAL0B8C","file":"static/js/6.6d9fd2f3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { parseISO, formatDistanceToNow } from 'date-fns'\r\nimport { ru as ruLocale } from 'date-fns/locale'\r\n\r\nconst TimeAgo = ({ timestamp }) => {\r\n  let timeAgo = ''\r\n  if (timestamp) {\r\n    const date = parseISO(timestamp)\r\n    timeAgo = formatDistanceToNow(date, { addSuffix: true, locale: ruLocale })\r\n  }\r\n\r\n  return (\r\n    <span>{timeAgo}</span>\r\n  )\r\n}\r\n\r\nexport default TimeAgo\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddPost_form__3anjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Posts_post__1e7bF\",\"post_title\":\"Posts_post_title__4PMvg\",\"post_text\":\"Posts_post_text__2_Mh2\",\"post_info\":\"Posts_post_info__3ZtXJ\",\"preload_posts\":\"Posts_preload_posts__2X9Aj\"};","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { TextField, Button } from '@material-ui/core/'\r\n\r\nimport { InputStyle, ButtonStyle } from '../MaterialStyles'\r\nimport * as styles from './AddPost.module.scss'\r\n\r\nconst renderTextField = ({ label, input, ...custom }) =>  <TextField label={label} autoComplete=\"off\" {...input} {...custom}/>\r\n\r\n\r\nlet AddPost = ({ handleSubmit }) => {\r\n    const stylesInput = InputStyle()\r\n    const stylesButton = ButtonStyle()\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={ handleSubmit } >\r\n            <div className=\"main-title\">Добавление поста</div>\r\n            <Field name=\"title\" className={stylesInput.root} component={renderTextField} type=\"text\" label=\"Заголовок\" variant=\"outlined\" />\r\n            <Field name=\"text\" className={stylesInput.root} component={renderTextField} multiline label=\"Текст\" variant=\"outlined\" />\r\n            <Button type=\"submit\" className={`${stylesButton.root} ${stylesButton.outlineBlue} ${styles.error_post_button}`}>Отправить</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddPost = reduxForm({form: 'add-post'})(AddPost)\r\n\r\nexport default AddPost","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getPostsThunk } from '../../redux/reducers/postsReducer'\r\nimport TimeAgo from '../TimeAgo/TimeAgo'\r\nimport AddPosts from '../AddPost/AddPost'\r\nimport Preloading from '../Preloading/Preloading'\r\nimport * as styles from './Posts.module.scss'\r\n\r\n\r\nconst Posts = () => {\r\n    const dispatch = useDispatch()\r\n    const posts = useSelector(state => state.posts.posts)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPostsThunk)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AddPosts />\r\n            <div className=\"main-title\">Все посты</div>\r\n            {\r\n                posts && posts.length === 0\r\n                    ? <Preloading />\r\n                    : posts.map(post => {\r\n                    const { id, title, text, name, date } = post\r\n\r\n                    return (\r\n                        <Link to={`posts/${id}`} className={styles.post} key={id}>\r\n                            <div className={styles.post_title}>{title}</div>\r\n                            <div className={styles.post_text}>{text.length > 100 ? `${text.substr(0, 100)}...` : text}</div>\r\n                            <div className={styles.post_info}>\r\n                                <span>{name}, </span>\r\n                                <TimeAgo timestamp={date}/>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts"],"sourceRoot":""}