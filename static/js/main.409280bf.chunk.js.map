{"version":3,"sources":["reportWebVitals.js","redux/store.js","index.jsx","components/Preloading/Preloading.module.scss","components/MaterialStyles.jsx","services/api.js","redux/reducers/postsReducer.js","components/Preloading/Preloading.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","posts","postsReducer","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","App","React","lazy","ReactDOM","render","basename","process","CookiesProvider","fallback","Preloading","type","document","getElementById","module","exports","IconThemeStyle","makeStyles","root","width","fill","transform","zIndex","position","ButtonStyle","height","fontSize","textTransform","smile","backgroundColor","color","transition","outlineBlue","border","loadingIcon","stroke","InputStyle","borderColor","instance","axios","baseURL","postsApi","get","id","target","put","name","number","GET_POSTS","GET_SINGLE_POST","REACTION_ADDED","REACTION_ADDED_ERROR","initialState","loading","error","getPostsThunk","state","action","Object","entries","payload","map","key","value","reactionAdd","item","marks","reactionRemove","dispatch","data","getSinglePostThunk","reactionAddedThunk","catch","PreloadingPosts","stylesLoading","className","styles"],"mappings":"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","file":"static/js/main.409280bf.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport postsReducer from './reducers/postsReducer'\r\n\r\nconst reducer = combineReducers({\r\n    posts: postsReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store","import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { CookiesProvider } from 'react-cookie';\n\nimport Preloading from './components/Preloading/Preloading'\nimport store from './redux/store'\nimport './index.scss'\n\nconst App = React.lazy(() => import('./components/App/App'))\n\n\n\n// console.log(process.env.PUBLIC_URL)\n\nReactDOM.render(\n        <Router basename={process.env.PUBLIC_URL}>\n            <CookiesProvider>\n                <Provider store={store}>\n                    <Suspense fallback={<Preloading type=\"app\" />}>\n                        <App />\n                    </Suspense>\n                </Provider>\n            </CookiesProvider>\n        </Router>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloading\":\"Preloading_preloading__1k5qK\",\"preloading_app\":\"Preloading_preloading_app__1AqD0\"};","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport const IconThemeStyle = makeStyles({\r\n    root: {\r\n        width: '20px !important',\r\n        fill: 'var(--yellowColor) !important',\r\n        transform: 'rotate(150deg)',\r\n        zIndex: '0',\r\n        position: 'relative'\r\n    }\r\n})\r\n\r\nexport const ButtonStyle = makeStyles({\r\n    root: {\r\n        height: '40px',\r\n        '& .MuiButton-label': {\r\n            fontSize: '16px',\r\n            textTransform: 'none'\r\n        }\r\n    }, \r\n\r\n    smile: {\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(29, 161, 242, .15) !important',\r\n            '& .MuiButton-label': {\r\n                color: 'var(--blueColor)'\r\n            } \r\n        },\r\n        '& .MuiButton-label': {\r\n            color: 'var(--mainColor)',\r\n            transition: '.2s color'\r\n        },\r\n        '& .MuiTouchRipple-root': {\r\n            color: 'var(--blueColor)',\r\n        }\r\n    },\r\n\r\n    outlineBlue : {\r\n        '& .MuiButton-label': {\r\n            color: 'var(--blueColor)',\r\n        },\r\n        '& .MuiTouchRipple-root': {\r\n            color: 'var(--blueColor)',\r\n            border: '1px solid var(--blueColor)'\r\n        }\r\n    }\r\n})\r\n\r\nexport const loadingIcon = makeStyles({\r\n    root: {\r\n        '& circle': {\r\n            stroke: 'var(--blueColor)'\r\n        }\r\n    }\r\n}) \r\n\r\nexport const InputStyle = makeStyles({\r\n    root: {\r\n        '& label': {\r\n            color: 'var(--lightBlackColor)'\r\n        },\r\n        '& label.Mui-focused': {\r\n            color: 'var(--blueColor)'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'var(--borderColor)',\r\n                transition: '.3s border-color'\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'var(--lightBlackColor)'\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid var(--blueColor)'\r\n            }\r\n        },\r\n        '& input, & textarea': {\r\n            color: 'var(--mainColor)',\r\n            transition: '.3s color'\r\n        }\r\n    }\r\n})","import * as axios from 'axios'\r\n\r\nconst instance  = axios.create({ baseURL: 'https://react-posts-app-33d31-default-rtdb.firebaseio.com' })\r\n\r\nexport const postsApi = {\r\n    getPosts: () => instance.get('/posts.json'),\r\n    getSinglePost: id => instance.get(`/posts/${id}.json`),\r\n    reactionAdded: (id, target) => instance.put(`/posts/${id}/marks/${target.name}.json`, target.number + 1)\r\n}","import { postsApi } from '../../services/api'\r\n\r\nexport const GET_POSTS = 'GET_POSTS'\r\nexport const GET_SINGLE_POST = 'GET_SINGLE_POST'\r\nexport const REACTION_ADDED = 'REACTION_ADDED'\r\nexport const REACTION_ADDED_ERROR = 'REACTION_ADDED_ERROR'\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    posts: []\r\n}\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_POSTS:\r\n                const posts = Object.entries(action.payload).map(([key, value]) => {\r\n                return { id: key, ...value }\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                posts: posts\r\n            }\r\n        case GET_SINGLE_POST:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                posts: [action.payload]\r\n            }\r\n        case REACTION_ADDED:\r\n            const reactionAdd = state.posts.map(item => {\r\n                if(item.id === action.payload.id) {\r\n                  item.marks[action.payload.target.name]++\r\n                }\r\n                return item\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                posts: reactionAdd\r\n            }\r\n        case REACTION_ADDED_ERROR:\r\n            const reactionRemove = state.posts.map(item => {\r\n                if(item.id === action.payload.id) {\r\n                  item.marks[action.payload.target.name]--\r\n                }\r\n                return item\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                posts: reactionRemove\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default postsReducer\r\n\r\n\r\nexport const getPostsThunk = dispatch => {\r\n    postsApi.getPosts()\r\n        .then(({ data }) => dispatch({ type: GET_POSTS, payload: data }))\r\n}\r\n\r\nexport const getSinglePostThunk = id => dispatch => {\r\n    postsApi.getSinglePost(id)\r\n        .then(({ data }) => data && dispatch({ type: GET_SINGLE_POST, payload: {id: id, ...data}}))\r\n}\r\n\r\nexport const reactionAddedThunk = (id, target) => dispatch => {\r\n    dispatch({ type: REACTION_ADDED, payload: {id, target}})\r\n    postsApi.reactionAdded(id, target)\r\n        .catch(() => dispatch({ type: REACTION_ADDED_ERROR, payload: {id, target}}))\r\n}","import React from 'react'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport * as styles from './Preloading.module.scss'\r\nimport { loadingIcon } from '../MaterialStyles'\r\n\r\nconst PreloadingPosts = ({type}) => {\r\n    const stylesLoading = loadingIcon()\r\n\r\n\r\n    return <div className={`${styles.preloading} ${type ? type === 'app' ? styles.preloading_app : '' : ''}`}><CircularProgress className={`${stylesLoading.root}`} /></div>\r\n}\r\n\r\nexport default PreloadingPosts"],"sourceRoot":""}